""""""
directive @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE

"""
Direct the client to resolve this field locally, either from the cache or local resolvers.
"""
directive @client(
  """
  When true, the client will never use the cache for this value. See
  https://www.apollographql.com/docs/react/essentials/local-state/#forcing-resolvers-with-clientalways-true
  """
  always: Boolean
) on FIELD | FRAGMENT_DEFINITION | INLINE_FRAGMENT

"""
Export this locally resolved field as a variable to be used in the remainder of this query. See
https://www.apollographql.com/docs/react/essentials/local-state/#using-client-fields-as-variables
"""
directive @export(
  """The variable name to export this field as."""
  as: String!
) on FIELD

"""
Specify a custom store key for this result. See
https://www.apollographql.com/docs/react/advanced/caching/#the-connection-directive
"""
directive @connection(
  """Specify the store key."""
  key: String!

  """
  An array of query argument names to include in the generated custom store key.
  """
  filter: [String!]
) on FIELD

""""""
type Query {
  """"""
  products(query: ProductQueryInput!): ProductConnection!

  """"""
  productsByType(query: ProductQueryInput!): [Product!]!

  """"""
  productById(id: Int!): Product
}

""""""
input ProductQueryInput {
  """"""
  limit: Int = 9

  """"""
  offset: Int = 0

  """"""
  search: String

  """"""
  order: String

  """"""
  orderField: String

  """"""
  filter: ProductFilterInput
}

""""""
input ProductFilterInput {
  """"""
  product_type: String
}

""""""
type ProductConnection {
  """"""
  limit: Int!

  """"""
  offset: Int!

  """"""
  count: Int!

  """"""
  product: [Product!]!
}

""""""
type Product {
  """"""
  id: String!

  """"""
  brand: String!

  """"""
  name: String!

  """"""
  price: String

  """"""
  description: String!

  """"""
  rating: String

  """"""
  product_type: String!

  """"""
  api_featured_image: String!

  """"""
  product_colors: [Colors]
}

""""""
type Colors {
  """"""
  hex_value: String!

  """"""
  colour_name: String!
}

""""""
type Root {
  """"""
  query: Query!
}

""""""
enum CacheControlScope {
  """"""
  PUBLIC

  """"""
  PRIVATE
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload
